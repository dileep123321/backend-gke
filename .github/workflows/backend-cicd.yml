name: Backend CI/CD - Deploy to GKE

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: modern-saga-472703-k3
  GKE_CLUSTER: test-demo-cluster
  GKE_ZONE: us-central1-a
  IMAGE: gcr.io/modern-saga-472703-k3/backend-app

# -----------------------------------------------------------------------------
# CI SECTION
# -----------------------------------------------------------------------------
jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

  linting:
    name: Lint Code (flake8)
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v4
      - name: Install flake8
        run: |
          pip install flake8
      - name: Run linting
        run: flake8 app

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t ${{ env.IMAGE }}:${{ github.sha }} .

  push_artifacts:
    name: Push Docker Image to GCR
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker gcr.io --quiet

      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE }}:${{ github.sha }}
          docker tag ${{ env.IMAGE }}:${{ github.sha }} ${{ env.IMAGE }}:latest
          docker push ${{ env.IMAGE }}:latest

  trivy_scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: push_artifacts
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}:${{ github.sha }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

# -----------------------------------------------------------------------------
# CD SECTION
# -----------------------------------------------------------------------------
  deploy_gke:
    name: Deploy to GKE Cluster
    runs-on: ubuntu-latest
    needs: trivy_scan
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Install GKE auth plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/ --validate=false
          kubectl set image deployment/backend-deployment backend=${{ env.IMAGE }}:${{ github.sha }}
          kubectl rollout status deployment/backend-deployment
          kubectl get svc backend-service -o wide
